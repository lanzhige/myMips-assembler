####################################################################
########################### syscall_intr ###########################
####################################################################

scroll_up		equ		(608)	# v0 = 0
clrsrc			equ		(640)	# v0 = 1
print_string	equ		(672)	# v0 = 2
read_string		equ		(704)	# v0 = 3
serial_send		equ		(768)	# v0 = 4
serial_recv		equ		(800)	# v0 = 5
serial_init		equ		(832)	# v0 = 6
put_char		equ		(864)	# v0 = 7
read_char		equ		(960)	# v0 = 8
put_char_AT		equ		(992)	# v0 = 9
cursor_set		equ		(1056)	# v0 = 10
print_int		equ		(1152)	# v0 = 11
read_int		equ		(1216)	# v0 = 12
read_file		equ		(1280)	# v0 = 13
dir				equ		(1728)	# v0 = 14
translate		equ		(1408) 	# v0 = 15
div				equ		(1504)	# v0 = 16
str_cmp 		equ		(1536)	# v0 = 17
save_src		equ		(1568)	# v0 = 18
recover_src		equ		(1600)	# v0 = 19
file_init		equ		(1632)	# v0 = 20
str_cpy			equ		(1696)	# v0 = 21

.data

.text
Start:
	addi $sp, $sp, -10
	sw $t0, 0($sp)
	sw $t1, 2($sp)
	sw $ra, 4($sp)
	sw $t2, 6($sp)
	sw $t3, 8($sp)

	mfb $t3			#保存B寄存器
	ei $t2 			#打开中断允许，读取epc

	addu $t1, $v0, $zero

	slti $t0, $t1, 1 		#scroll_up
	beq $t0, $zero, next1
	jal scroll_up
	b Exit

next1:
	slti $t0, $t1, 2 		#clrsrc
	beq $t0, $zero, next2
	jal clrsrc
	b Exit

next2:
	slti $t0, $t1, 3 		#print_string
	beq $t0, $zero, next3
	jal print_string
	b Exit

next3:
	slti $t0, $t1, 4 		#read_string
	beq $t0, $zero, next4
	jal read_string
	b Exit

next4:
	slti $t0, $t1, 5 		#serial_send
	beq $t0, $zero, next5
	jal serial_send
	b Exit

next5:
	slti $t0, $t1, 6 		#serial_recv
	beq $t0, $zero, next6
	jal serial_recv
	b Exit

next6:
	slti $t0, $t1, 7 		#serial_init
	beq $t0, $zero, next7
	jal serial_init
	b Exit

next7:
	slti $t0, $t1, 8 		#put_char
	beq $t0, $zero, next8
	jal put_char
	b Exit

next8:
	slti $t0, $t1, 9 		#read_char
	beq $t0, $zero, next9
	jal read_char
	b Exit

next9:
	slti $t0, $t1, 10 		#put_char_AT
	beq $t0, $zero, next10
	jal put_char_AT
	b Exit

next10:
	slti $t0, $t1, 11 		#cursor_set
	beq $t0, $zero, next11
	jal cursor_set
	b Exit

next11:
	slti $t0, $t1, 12 		#print_int
	beq $t0, $zero, next12
	jal print_int
	b Exit

next12:
	slti $t0, $t1, 13 		#read_int
	beq $t0, $zero, next13
	jal read_int
	b Exit

next13:
	slti $t0, $t1, 14 		#read_file
	beq $t0, $zero, next14
	jal read_file
	b Exit

next14:
	slti $t0, $t1, 15 		#dir
	beq $t0, $zero, next15
	jal dir
	b Exit

next15:
	slti $t0, $t1, 16 		#translate
	beq $t0, $zero, next16
	jal translate
	b Exit

next16:
	slti $t0, $t1, 17 		#div
	beq $t0, $zero, next17
	jal div
	b Exit

next17:
	slti $t0, $t1, 18 		#str_cmp
	beq $t0, $zero, next18
	jal str_cmp
	b Exit

next18:
	slti $t0, $t1, 19 		#save_src
	beq $t0, $zero, next19
	jal save_src
	b Exit

next19:
	slti $t0, $t1, 20 		#recover_src
	beq $t0, $zero, next20
	jal recover_src
	b Exit

next20:
	slti $t0, $t1, 21 		#file_init
	beq $t0, $zero, next21
	jal file_init
	b Exit

next21:
	slti $t0, $t1, 22		#str_cpy
	beq $t0, $zero, next22
	jal str_cpy
	b Exit

next22:

Exit:
	di $t2 			#关闭中断允许，写入epc
	mtb $t3			#恢复B寄存器

	lw $t0, 0($sp)
	lw $t1, 2($sp)
	lw $ra, 4($sp)
	lw $t2, 6($sp)
	lw $t3, 8($sp)
	addi $sp, $sp, 10

	jr $ra
.end Start
