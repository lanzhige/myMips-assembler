########################### 文件信息初始化 ###########################

buffer 		equ 	(5540)
fatsec 		equ		(5924)
datasec 	equ 	(5468)
dirsec		equ		(5536)
get_sector	equ		(1792)

.data

.text
Start:
	addi $sp, $sp, -20
	sw $t0, 0($sp)
	sw $t1, 2($sp)
	sw $t2, 4($sp)
	sw $t3, 6($sp)
	sw $t4, 8($sp)
	sw $t5, 10($sp)
	sw $t6, 12($sp)
	sw $s0, 14($sp)
	sw $s1, 16($sp)
	sw $ra, 18($sp)

	add $a0, $zero, $zero 		#获取0扇区
	addi $a1, $zero, buffer
	jal get_sector

	lhu $t1, buffer+227($zero)	#0扇区，偏移：0x1c6 >> 1 MBR to DBR
	andi $t0, $t1, 0ffh 		#后8位
	sll $t0, $t0, 8 			#移位
	srl $t1, $t1, 8
	add $t1, $t1, $t0

	lhu $t2, buffer+226($zero)    #0扇区，偏移：0x1c6 >> 1+1  MBR to DBR的低位
	andi $t0, $t2, 0ffh
	sll $t0,  $t0 , 8
	srl $t2, $t2, 8
	add $t2, $t2, $t0

	sll $t1, $t1, 16
	add $t1, $t2, $t1

	add $a0, $zero, $t1 		#获取t1扇区
	addi $a1, $zero, buffer
	jal get_sector

	lhu $t2, buffer+7($zero) 	#$t1扇区，偏移：0xe >> 1 DBR to FAT
	andi $t0, $t2, 0ffh 	#大小头调整
	sll $t0, $t0, 8
	srl $t2, $t2, 8
	add $t2, $t2, $t0
	add $t3, $t1, $t2 		#fatsec
	sw $t3, fatsec($zero)

	lhu $t2, buffer+10($zero) 	#$t1扇区，偏移：0x14 >> 1 FATsize
	andi $t0, $t2, 0ffh 	#大小头调整
	sll $t0, $t0, 8
	srl $t2, $t2, 8
	add $t2, $t2, $t0
	sll $t2, $t2, 1 		#FATsize*2
	add $t3, $t3, $t2 		#dirsec = FATsec + FATsize * 2
	sw $t3, dirsec($zero)

	addi $t3, $t3, 32
	sw $t3, datasec($zero) 	#datasec = dirsec + 32(默认)

########################### 目录区转换 ###########################

	addi $a0, $zero, dirsec		#获得目录区
	addi $a1, $zero, buffer
	jal get_sector

	addi $s0, $zero, 32   	#第一项跳过
	addi $t4, $zero, 020h  	#空格
	addi $t5, $zero, 32*16 	#一个扇区16项

eachItem:
	add $s1, $zero, $s0  	#写第几个16位
	add $t1, $zero, $s0 	#读第几个16位

loop:
	lhu $t0, buffer($t1)  #读16位

transFir:
	srl $t2, $t0, 8  		#第一个字节
	beq $t2, $t4, IsFB 		#如果是0x20
	addi $t2, $t2, -(30h)
	slti $t3, $t2, 10 		#小于10是0和9
	bne $t3, $zero, WriteFir 		#是数字直接写码
	addi $t2, $t2, -7 		#不是数字的话减7

WriteFir:
	sh $t2, dirpos($s1) #写16位
	addi $s1,$s1,1

transSec:
	andi $t2, $t0, 0ffh 	#第二个字节
	beq $t2, $t4, IsFB 		#如果是0x20
	addi $t2, $t2, -(30h)
	slti $t3, $t2, 10 		#小于10是0和9
	bne $t3, $zero, WriteSec 		#是数字直接写码
	addi $t2, $t2, -7 		#不是数字的话减7

WriteSec:
	sh $t2, dirpos($s1) #写16位
	addi $s1, $s1, 1
	addi $t1, $t1, 1
	addi $t2, $s0, 8       # t2 = s0 + 8
	slti $t3, $s1, $t2     # s1 < s0 + 8 没读完，继续。否则跳到fb结束
	beq $t3, $zero, loop

IsFB:
	addi $t2, $zero, 04dh
	sh $t2, dirpos($s1)
	addi $s1, $s1, 1    #写的位置继续
	addi $t1, $s0, 4   	#读的位置偏移4个16位

loopExt:
	lhu $t0,buffer($t1)  #读16位

transFirExt:
	srl $t2, $t0, 8  		#第一个字节
	beq $t2, $t4, IsExtFB 	#如果是0x20
	addi $t2, $t2, -(30h)
	slti $t3, $t2, 10 		#小于10是0和9
	bne $t3, $zero, WriteFirExt 		#是数字直接写码
	addi $t2, $t2, -7 		#不是数字的话减7

WriteFirExt:
	sh $t2, dirpos($s1) #写16位
	addi $s1, $s1, 1

transSecExt:
	andi $t2, $t0, 0ffh 	#第二个字节
	beq $t2, $t4, IsExtFB 	#如果是0x20
	addi $t2, $t2, -(30h)
	slti $t3, $t2, 10 		#小于10是0和9
	bne $t3, $zero, WriteSecExt 	#是数字直接写码
	addi $t2, $t2, -7 		#不是数字的话减7

WriteSecExt:
	sh $t2, dirpos($s1) #写16位
	addi $s1, $s1, 1
	addi $t1, $t1, 1
	addi $t2, $s0, 4       # t2 = s0 + 4
	slti $t3, $s1, $t2     # s1 < s0 + 4 没读完，继续。否则跳到fb结束
	beq $t3, $zero, loopExt

IsExtFB:
	addi $t2, $zero, 04dh
	sh $t2, dirpos($s1)
	addi $s0, $s0, 32   	#下一个文件
	bne $s0, $t5, eachItem 	#还有下一项

########################### FAT表转换 ###########################

	addi $a0, $zero, fatsec		#获得目录区
	addi $a1, $zero, buffer
	jal get_sector

	addi $t6, $zero, 256 		# 读取256次，一次16位
	addi $t1, $t1, $zero

loopFat:
	lh $t0, buffer($t1)
	srl $t3, $t0, 8 		#第一个字节
	andi $t4, $t0, 0FFh 	#第二个字节
	sll $t4, $t4, 8
	add $t4, $t4, $t3
	sh $t4, fatpos($t1)
	addi $t1, $t1, 1
	bne $t1, $t6, loopFat

exit:
	lw $t0, 0($sp)
	lw $t1, 2($sp)
	lw $t2, 4($sp)
	lw $t3, 6($sp)
	lw $t4, 8($sp)
	lw $t5, 10($sp)
	lw $t6, 12($sp)
	lw $s0, 14($sp)
	lw $s1, 16($sp)
	lw $ra, 18($sp)
	addi $sp, $sp, 20

	jr $ra
.end Start
